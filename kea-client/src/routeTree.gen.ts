/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as ProviderOwnerRepoPullPrIdIndexImport } from "./routes/$provider/$owner/$repo/pull/$prId/index";
import { Route as ProviderOwnerRepoPullPrIdReviewImport } from "./routes/$provider/$owner/$repo/pull/$prId/review";
import { Route as ProviderIndexImport } from "./routes/$provider/index";
import { Route as rootRoute } from "./routes/__root";
import { Route as IndexImport } from "./routes/index";

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const ProviderIndexRoute = ProviderIndexImport.update({
  id: "/$provider/",
  path: "/$provider/",
  getParentRoute: () => rootRoute,
} as any);

const ProviderOwnerRepoPullPrIdIndexRoute =
  ProviderOwnerRepoPullPrIdIndexImport.update({
    id: "/$provider/$owner/$repo/pull/$prId/",
    path: "/$provider/$owner/$repo/pull/$prId/",
    getParentRoute: () => rootRoute,
  } as any);

const ProviderOwnerRepoPullPrIdReviewRoute =
  ProviderOwnerRepoPullPrIdReviewImport.update({
    id: "/$provider/$owner/$repo/pull/$prId/review",
    path: "/$provider/$owner/$repo/pull/$prId/review",
    getParentRoute: () => rootRoute,
  } as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/$provider/": {
      id: "/$provider/";
      path: "/$provider";
      fullPath: "/$provider";
      preLoaderRoute: typeof ProviderIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/$provider/$owner/$repo/pull/$prId/review": {
      id: "/$provider/$owner/$repo/pull/$prId/review";
      path: "/$provider/$owner/$repo/pull/$prId/review";
      fullPath: "/$provider/$owner/$repo/pull/$prId/review";
      preLoaderRoute: typeof ProviderOwnerRepoPullPrIdReviewImport;
      parentRoute: typeof rootRoute;
    };
    "/$provider/$owner/$repo/pull/$prId/": {
      id: "/$provider/$owner/$repo/pull/$prId/";
      path: "/$provider/$owner/$repo/pull/$prId";
      fullPath: "/$provider/$owner/$repo/pull/$prId";
      preLoaderRoute: typeof ProviderOwnerRepoPullPrIdIndexImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/$provider": typeof ProviderIndexRoute;
  "/$provider/$owner/$repo/pull/$prId/review": typeof ProviderOwnerRepoPullPrIdReviewRoute;
  "/$provider/$owner/$repo/pull/$prId": typeof ProviderOwnerRepoPullPrIdIndexRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/$provider": typeof ProviderIndexRoute;
  "/$provider/$owner/$repo/pull/$prId/review": typeof ProviderOwnerRepoPullPrIdReviewRoute;
  "/$provider/$owner/$repo/pull/$prId": typeof ProviderOwnerRepoPullPrIdIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/$provider/": typeof ProviderIndexRoute;
  "/$provider/$owner/$repo/pull/$prId/review": typeof ProviderOwnerRepoPullPrIdReviewRoute;
  "/$provider/$owner/$repo/pull/$prId/": typeof ProviderOwnerRepoPullPrIdIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | "/$provider"
    | "/$provider/$owner/$repo/pull/$prId/review"
    | "/$provider/$owner/$repo/pull/$prId";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/"
    | "/$provider"
    | "/$provider/$owner/$repo/pull/$prId/review"
    | "/$provider/$owner/$repo/pull/$prId";
  id:
    | "__root__"
    | "/"
    | "/$provider/"
    | "/$provider/$owner/$repo/pull/$prId/review"
    | "/$provider/$owner/$repo/pull/$prId/";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  ProviderIndexRoute: typeof ProviderIndexRoute;
  ProviderOwnerRepoPullPrIdReviewRoute: typeof ProviderOwnerRepoPullPrIdReviewRoute;
  ProviderOwnerRepoPullPrIdIndexRoute: typeof ProviderOwnerRepoPullPrIdIndexRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProviderIndexRoute: ProviderIndexRoute,
  ProviderOwnerRepoPullPrIdReviewRoute: ProviderOwnerRepoPullPrIdReviewRoute,
  ProviderOwnerRepoPullPrIdIndexRoute: ProviderOwnerRepoPullPrIdIndexRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$provider/",
        "/$provider/$owner/$repo/pull/$prId/review",
        "/$provider/$owner/$repo/pull/$prId/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$provider/": {
      "filePath": "$provider/index.tsx"
    },
    "/$provider/$owner/$repo/pull/$prId/review": {
      "filePath": "$provider/$owner/$repo/pull/$prId/review.tsx"
    },
    "/$provider/$owner/$repo/pull/$prId/": {
      "filePath": "$provider/$owner/$repo/pull/$prId/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
